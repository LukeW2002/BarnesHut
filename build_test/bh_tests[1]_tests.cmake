add_test([=[NEONLeaf.MatchesScalarReference]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=NEONLeaf.MatchesScalarReference]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[NEONLeaf.MatchesScalarReference]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[NEONLeaf.PerformanceConsistency]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=NEONLeaf.PerformanceConsistency]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[NEONLeaf.PerformanceConsistency]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[NEONLeaf.HandlesEdgeCases]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=NEONLeaf.HandlesEdgeCases]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[NEONLeaf.HandlesEdgeCases]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[InternalNodeBatch.NEONvsScalarConsistency]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=InternalNodeBatch.NEONvsScalarConsistency]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[InternalNodeBatch.NEONvsScalarConsistency]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[Traversal.ThetaZeroMatchesBruteForceSmallN]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=Traversal.ThetaZeroMatchesBruteForceSmallN]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Traversal.ThetaZeroMatchesBruteForceSmallN]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[Traversal.ErrorMonotonicWithTheta]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=Traversal.ErrorMonotonicWithTheta]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Traversal.ErrorMonotonicWithTheta]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[Traversal.TranslationEquivariance]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=Traversal.TranslationEquivariance]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Traversal.TranslationEquivariance]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[Traversal.UniformScalingEquivariance]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=Traversal.UniformScalingEquivariance]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Traversal.UniformScalingEquivariance]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[Traversal.ReproducibilityTest]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=Traversal.ReproducibilityTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Traversal.ReproducibilityTest]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[AutoDiscovery.SystemBasicFunctionality]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=AutoDiscovery.SystemBasicFunctionality]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AutoDiscovery.SystemBasicFunctionality]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[AutoDiscovery.TestHooksAccessible]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=AutoDiscovery.TestHooksAccessible]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[AutoDiscovery.TestHooksAccessible]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[Tree.TerminatesAndRespectsLimits]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=Tree.TerminatesAndRespectsLimits]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Tree.TerminatesAndRespectsLimits]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[Tree.BijectionAndLeafBounds]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=Tree.BijectionAndLeafBounds]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Tree.BijectionAndLeafBounds]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[Tree.MassCOMAndBoundRadius]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=Tree.MassCOMAndBoundRadius]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Tree.MassCOMAndBoundRadius]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[Tree.DegenerateDuplicatesStopAtLimit]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=Tree.DegenerateDuplicatesStopAtLimit]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Tree.DegenerateDuplicatesStopAtLimit]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[Tree.ParentBoundsContainChildren]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=Tree.ParentBoundsContainChildren]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Tree.ParentBoundsContainChildren]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
add_test([=[Tree.NoOrphanNodes]=]  /Users/luke/Projects/refactorBarnesHuttMrkIII/build_test/bh_tests [==[--gtest_filter=Tree.NoOrphanNodes]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[Tree.NoOrphanNodes]=]  PROPERTIES WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==] VS_DEBUGGER_WORKING_DIRECTORY /Users/luke/Projects/refactorBarnesHuttMrkIII)
set(  bh_tests_TESTS NEONLeaf.MatchesScalarReference NEONLeaf.PerformanceConsistency NEONLeaf.HandlesEdgeCases InternalNodeBatch.NEONvsScalarConsistency Traversal.ThetaZeroMatchesBruteForceSmallN Traversal.ErrorMonotonicWithTheta Traversal.TranslationEquivariance Traversal.UniformScalingEquivariance Traversal.ReproducibilityTest AutoDiscovery.SystemBasicFunctionality AutoDiscovery.TestHooksAccessible Tree.TerminatesAndRespectsLimits Tree.BijectionAndLeafBounds Tree.MassCOMAndBoundRadius Tree.DegenerateDuplicatesStopAtLimit Tree.ParentBoundsContainChildren Tree.NoOrphanNodes)
